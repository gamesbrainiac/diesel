error[E0277]: the trait bound `f64: SelectableExpression<NoFromClause>` is not satisfied
   --> tests/fail/array_expressions_must_be_correct_type.rs:9:5
    |
9   |     select(array((1f64, 3f64))).get_result::<Vec<i32>>(&mut connection);
    |     ^^^^^^ the trait `SelectableExpression<NoFromClause>` is not implemented for `f64`
    |
   ::: $DIESEL/src/query_builder/functions.rs
    |
    |     crate::dsl::BareSelect<T>: AsQuery,
    |                                ------- required by this bound in `diesel::select`
    |
    = note: required because of the requirements on the impl of `SelectableExpression<NoFromClause>` for `(f64, f64)`
    = note: 1 redundant requirements hidden
    = note: required because of the requirements on the impl of `SelectableExpression<NoFromClause>` for `diesel::pg::expression::array::ArrayLiteral<(f64, f64), diesel::sql_types::Integer>`
    = note: required because of the requirements on the impl of `diesel::query_builder::select_clause::SelectClauseExpression<NoFromClause>` for `diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(f64, f64), diesel::sql_types::Integer>>`
    = note: required because of the requirements on the impl of `Query` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(f64, f64), diesel::sql_types::Integer>>>`
    = note: required because of the requirements on the impl of `AsQuery` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(f64, f64), diesel::sql_types::Integer>>>`

error[E0277]: the trait bound `f64: ValidGrouping<()>` is not satisfied
   --> tests/fail/array_expressions_must_be_correct_type.rs:9:5
    |
9   |     select(array((1f64, 3f64))).get_result::<Vec<i32>>(&mut connection);
    |     ^^^^^^ the trait `ValidGrouping<()>` is not implemented for `f64`
    |
   ::: $DIESEL/src/query_builder/functions.rs
    |
    |     crate::dsl::BareSelect<T>: AsQuery,
    |                                ------- required by this bound in `diesel::select`
    |
    = note: required because of the requirements on the impl of `ValidGrouping<()>` for `(f64, f64)`
    = note: 1 redundant requirements hidden
    = note: required because of the requirements on the impl of `ValidGrouping<()>` for `diesel::pg::expression::array::ArrayLiteral<(f64, f64), diesel::sql_types::Integer>`
    = note: required because of the requirements on the impl of `Query` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(f64, f64), diesel::sql_types::Integer>>>`
    = note: required because of the requirements on the impl of `AsQuery` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(f64, f64), diesel::sql_types::Integer>>>`

error[E0277]: the trait bound `f64: SelectableExpression<NoFromClause>` is not satisfied
 --> tests/fail/array_expressions_must_be_correct_type.rs:9:33
  |
9 |     select(array((1f64, 3f64))).get_result::<Vec<i32>>(&mut connection);
  |                                 ^^^^^^^^^^ the trait `SelectableExpression<NoFromClause>` is not implemented for `f64`
  |
  = note: required because of the requirements on the impl of `SelectableExpression<NoFromClause>` for `(f64, f64)`
  = note: 1 redundant requirements hidden
  = note: required because of the requirements on the impl of `SelectableExpression<NoFromClause>` for `diesel::pg::expression::array::ArrayLiteral<(f64, f64), diesel::sql_types::Integer>`
  = note: required because of the requirements on the impl of `diesel::query_builder::select_clause::SelectClauseExpression<NoFromClause>` for `diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(f64, f64), diesel::sql_types::Integer>>`
  = note: required because of the requirements on the impl of `Query` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(f64, f64), diesel::sql_types::Integer>>>`
  = note: required because of the requirements on the impl of `LoadQuery<'_, _, Vec<i32>>` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(f64, f64), diesel::sql_types::Integer>>>`

error[E0277]: the trait bound `f64: ValidGrouping<()>` is not satisfied
 --> tests/fail/array_expressions_must_be_correct_type.rs:9:33
  |
9 |     select(array((1f64, 3f64))).get_result::<Vec<i32>>(&mut connection);
  |                                 ^^^^^^^^^^ the trait `ValidGrouping<()>` is not implemented for `f64`
  |
  = note: required because of the requirements on the impl of `ValidGrouping<()>` for `(f64, f64)`
  = note: 1 redundant requirements hidden
  = note: required because of the requirements on the impl of `ValidGrouping<()>` for `diesel::pg::expression::array::ArrayLiteral<(f64, f64), diesel::sql_types::Integer>`
  = note: required because of the requirements on the impl of `Query` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(f64, f64), diesel::sql_types::Integer>>>`
  = note: required because of the requirements on the impl of `LoadQuery<'_, _, Vec<i32>>` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(f64, f64), diesel::sql_types::Integer>>>`

error[E0277]: the trait bound `f64: QueryFragment<Pg>` is not satisfied
 --> tests/fail/array_expressions_must_be_correct_type.rs:9:33
  |
9 |     select(array((1f64, 3f64))).get_result::<Vec<i32>>(&mut connection);
  |                                 ^^^^^^^^^^ the trait `QueryFragment<Pg>` is not implemented for `f64`
  |
  = note: required because of the requirements on the impl of `QueryFragment<Pg>` for `(f64, f64)`
  = note: 3 redundant requirements hidden
  = note: required because of the requirements on the impl of `QueryFragment<Pg>` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(f64, f64), diesel::sql_types::Integer>>>`
  = note: required because of the requirements on the impl of `LoadQuery<'_, _, Vec<i32>>` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(f64, f64), diesel::sql_types::Integer>>>`

error[E0277]: the trait bound `f64: QueryId` is not satisfied
 --> tests/fail/array_expressions_must_be_correct_type.rs:9:33
  |
9 |     select(array((1f64, 3f64))).get_result::<Vec<i32>>(&mut connection);
  |                                 ^^^^^^^^^^ the trait `QueryId` is not implemented for `f64`
  |
  = note: required because of the requirements on the impl of `QueryId` for `(f64, f64)`
  = note: 3 redundant requirements hidden
  = note: required because of the requirements on the impl of `QueryId` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(f64, f64), diesel::sql_types::Integer>>>`
  = note: required because of the requirements on the impl of `LoadQuery<'_, _, Vec<i32>>` for `SelectStatement<NoFromClause, diesel::query_builder::select_clause::SelectClause<diesel::pg::expression::array::ArrayLiteral<(f64, f64), diesel::sql_types::Integer>>>`

error[E0277]: the trait bound `f64: diesel::Expression` is not satisfied
  --> tests/fail/array_expressions_must_be_correct_type.rs:9:12
   |
9  |     select(array((1f64, 3f64))).get_result::<Vec<i32>>(&mut connection);
   |            ^^^^^ the trait `diesel::Expression` is not implemented for `f64`
   |
  ::: $DIESEL/src/pg/expression/array.rs
   |
   |     T: AsExpressionList<ST>,
   |        -------------------- required by this bound in `diesel::dsl::array`
   |
   = note: required because of the requirements on the impl of `AsExpression<diesel::sql_types::Integer>` for `f64`
   = note: required because of the requirements on the impl of `AsExpressionList<diesel::sql_types::Integer>` for `(f64, f64)`
